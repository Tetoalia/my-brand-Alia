{"version":3,"sources":["../../src/routes/sign-up.js"],"names":["express","require","router","Router","bcrypt","validateUser","User","validateMiddleWare","get","req","res","send","Message","post","findOne","username","body","userExist","status","genSalt","salt","hash","password","hashedPassword","user","type","save","find","users","module","exports"],"mappings":";;;;;;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAf;;AACA,IAAMC,MAAM,GAAGH,OAAO,CAAC,QAAD,CAAtB;;AAEA,eAA4BA,OAAO,CAAC,gBAAD,CAAnC;AAAA,IAAOI,YAAP,YAAOA,YAAP;AAAA,IAAoBC,IAApB,YAAoBA,IAApB;;AACA,IAAMC,kBAAkB,GAAGN,OAAO,CAAC,mCAAD,CAAlC;;AAEAC,MAAM,CAACM,GAAP,CAAW,GAAX,EAAe,UAACC,GAAD,EAAKC,GAAL,EAAW;AACtBA,EAAAA,GAAG,CAACC,IAAJ,CAAS;AAACC,IAAAA,OAAO,EAAC;AAAT,GAAT;AACH,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAV,MAAM,CAACW,IAAP,CAAY,GAAZ,EAAiBN,kBAAkB,CAACF,YAAD,CAAnC;AAAA,qEAAmD,iBAAMI,GAAN,EAAUC,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEvBJ,IAAI,CAACQ,OAAL,CAAa;AAACC,cAAAA,QAAQ,EAAEN,GAAG,CAACO,IAAJ,CAASD;AAApB,aAAb,CAFuB;;AAAA;AAEzCE,YAAAA,SAFyC;;AAAA,iBAG3CA,SAH2C;AAAA;AAAA;AAAA;;AAAA,6CAGzBP,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBP,IAAhB,CAAqB,wBAArB,CAHyB;;AAAA;AAAA;AAAA,mBAI5BP,MAAM,CAACe,OAAP,EAJ4B;;AAAA;AAIzCC,YAAAA,IAJyC;AAAA;AAAA,mBAKlBhB,MAAM,CAACiB,IAAP,CAAYZ,GAAG,CAACO,IAAJ,CAASM,QAArB,EAA+BF,IAA/B,CALkB;;AAAA;AAKzCG,YAAAA,cALyC;AAOzCC,YAAAA,IAPyC,GAOnC,IAAIlB,IAAJ,CAAS;AACjBS,cAAAA,QAAQ,EAACN,GAAG,CAACO,IAAJ,CAASD,QADD;AAEjBO,cAAAA,QAAQ,EAACC,cAFQ;AAGjBE,cAAAA,IAAI,EAAE;AAHW,aAAT,CAPmC;AAAA;AAAA,mBAaxCD,IAAI,CAACE,IAAL,EAbwC;;AAAA;AAAA;AAAA,mBAc7BpB,IAAI,CAACqB,IAAL,EAd6B;;AAAA;AAc3CC,YAAAA,KAd2C;AAe/ClB,YAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBP,IAAhB,CAAqB;AAACC,cAAAA,OAAO,EAAC;AAAT,aAArB;AAf+C;AAAA;;AAAA;AAAA;AAAA;AAiB/C;AACAF,YAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBP,IAAhB;;AAlB+C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnD;;AAAA;AAAA;AAAA;AAAA;AAuBAkB,MAAM,CAACC,OAAP,GAAiB5B,MAAjB","sourcesContent":["const express = require(\"express\");\r\nconst router = express.Router();\r\nconst bcrypt = require(\"bcrypt\")\r\n\r\nconst {validateUser,User} = require(\"../models/User\")\r\nconst validateMiddleWare = require('../middlewares/validateMiddleware')\r\n\r\nrouter.get(\"/\",(req,res)=>{\r\n    res.send({Message:\"This is the sign up page\"})\r\n})\r\n\r\n/**\r\n * @swagger\r\n * /signup:\r\n *   post:\r\n *     summary: Register new user\r\n *     tags:\r\n *       - Auth\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 username:\r\n *                   type: string\r\n *                 password:\r\n *                   type: string  \r\n *     responses:\r\n *       '400':\r\n *         description: Bad Request \r\n *       '200':\r\n *         description: A list of queries.\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 token:\r\n *                   type: string\r\n *                   description: A secure token for authentication\r\n *                 \r\n */\r\n\r\nrouter.post(\"/\", validateMiddleWare(validateUser), async(req,res)=>{\r\ntry {    \r\n    const userExist = await User.findOne({username: req.body.username})\r\n    if (userExist) return res.status(400).send(\"Username Already Taken\")\r\n    const salt = await bcrypt.genSalt();\r\n    const hashedPassword = await bcrypt.hash(req.body.password, salt)\r\n\r\n    const user= new User({\r\n        username:req.body.username,\r\n        password:hashedPassword,\r\n        type: \"user\"\r\n    })\r\n\r\n     await user.save();\r\n  const users = await User.find();\r\n    res.status(201).send({Message:\"User registered Successfully\"})\r\n} catch (error) {\r\n    // console.log(error)\r\n    res.status(500).send();\r\n}\r\n\r\n})\r\n\r\nmodule.exports = router;"],"file":"sign-up.js"}